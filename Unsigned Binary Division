`timescale 1ns / 1ps
module Unsigned_Div(Q, Rem, A,B, reset);  // (A/B)
output [3:0]Q;
output [3:0]Rem;
input [3:0]A,B;
input reset;

wire [6:0]A_new;

wire [3:0]TCB;

wire [4:0]FB_layer_1;
wire[2:0]M_layer_1;

seven_bit_convertor SBC(A_new, A); //converted A to seven bits
Twos_Comp_FB TC(TCB,B,(1),reset);

four_bit_adder FBA1 (FB_layer_1, A_new[6:3], TCB, reset);

MUX M11(M_layer_1[2],A_new[5], FB_layer_1[2], FB_layer_1[4]);
MUX M12(M_layer_1[1],A_new[4], FB_layer_1[1], FB_layer_1[4]);
MUX M13(M_layer_1[0],A_new[3], FB_layer_1[0], FB_layer_1[4]);
assign Q[3] = FB_layer_1[4];


wire [4:0] FB_layer_2;
wire [2:0]M_layer_2;

wire [3:0] A_new_1;
assign A_new_1[3:1] = M_layer_1[2:0];
assign A_new_1[0] = A_new[2];

four_bit_adder FBA2 (FB_layer_2, A_new_1, TCB, reset);

MUX M21(M_layer_2[2],A_new_1[2], FB_layer_2[2], FB_layer_2[4]);
MUX M22(M_layer_2[1],A_new_1[1], FB_layer_2[1], FB_layer_2[4]);
MUX M23(M_layer_2[0],A_new_1[0], FB_layer_2[0], FB_layer_2[4]);
assign Q[2] = FB_layer_2[4];


wire [4:0] FB_layer_3;
wire [2:0]M_layer_3;

wire [3:0] A_new_2;
assign A_new_2[3:1] = M_layer_2[2:0];
assign A_new_2[0] = A_new[1];

four_bit_adder FBA3 (FB_layer_3, A_new_2, TCB, reset);

MUX M31(M_layer_3[2],A_new_2[2], FB_layer_3[2], FB_layer_3[4]);
MUX M32(M_layer_3[1],A_new_2[1], FB_layer_3[1], FB_layer_3[4]);
MUX M33(M_layer_3[0],A_new_2[0], FB_layer_3[0], FB_layer_3[4]);
assign Q[1] = FB_layer_3[4];


wire [4:0] FB_layer_4;
wire [3:0]M_layer_4;

wire [3:0] A_new_3;
assign A_new_3[3:1] = M_layer_3[2:0];
assign A_new_3[0] = A_new[0];

four_bit_adder FBA4 (FB_layer_4, A_new_3, TCB, reset);
MUX M40 (M_layer_4[3], A_new_3[3], FB_layer_4[3], FB_layer_4[4]);
MUX M41(M_layer_4[2],A_new_3[2], FB_layer_4[2], FB_layer_4[4]);
MUX M42(M_layer_4[1],A_new_3[1], FB_layer_4[1], FB_layer_4[4]);
MUX M43(M_layer_4[0],A_new_3[0], FB_layer_4[0], FB_layer_4[4]);


assign Q[0] = FB_layer_4[4];
assign Rem[0] = M_layer_4[0];
assign Rem[1] = M_layer_4[1];
assign Rem[2] = M_layer_4[2];
assign Rem[3] = M_layer_4[3];

endmodule
